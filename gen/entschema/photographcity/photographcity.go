// Code generated by ent, DO NOT EDIT.

package photographcity

import (
	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the photographcity type in the database.
	Label = "photograph_city"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldProvinceCode holds the string denoting the province_code field in the database.
	FieldProvinceCode = "province_code"
	// FieldProvinceName holds the string denoting the province_name field in the database.
	FieldProvinceName = "province_name"
	// FieldCityCode holds the string denoting the city_code field in the database.
	FieldCityCode = "city_code"
	// FieldCityName holds the string denoting the city_name field in the database.
	FieldCityName = "city_name"
	// Table holds the table name of the photographcity in the database.
	Table = "photograph_city"
)

// Columns holds all SQL columns for photographcity fields.
var Columns = []string{
	FieldID,
	FieldProvinceCode,
	FieldProvinceName,
	FieldCityCode,
	FieldCityName,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

// OrderOption defines the ordering options for the PhotographCity queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByProvinceCode orders the results by the province_code field.
func ByProvinceCode(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldProvinceCode, opts...).ToFunc()
}

// ByProvinceName orders the results by the province_name field.
func ByProvinceName(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldProvinceName, opts...).ToFunc()
}

// ByCityCode orders the results by the city_code field.
func ByCityCode(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCityCode, opts...).ToFunc()
}

// ByCityName orders the results by the city_name field.
func ByCityName(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCityName, opts...).ToFunc()
}
